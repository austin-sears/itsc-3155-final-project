from flask import Flask, render_template, url_for
from repository import *

app = Flask(__name__)

@app.route('/')
def index():
    return render_template('login.html')

@app.route('/create_profile')
def create():
    return render_template('Profile_Create.html')

@app.route('/Home')
def home():
    return render_template('home.html')

@app.route('/upload')
def upload():
    return render_template('upload.html')

@app.route('/feed')
def feed():
    return render_template('Feed_page.html')

@app.route('/Post')
def post():
    return render_template('single_post.html')

#
#FUNCTIONS----------------------------------------------------
#

#Creates post
@app.post('/create_acct')
def create_acct():
    Username = request.form.get('new_username')
    PrefName = request.form.get('new_prefname')
    Title = request.form.get('new_title')
    Email = request.form.get('new_email')
    AboutMe = request.form.get('new_aboutme')
    Password = request.form.get('new_password')

    if not Username or not PrefName or not Title or not Email or not AboutMe or not Password:
        abort(400, "Missing required information. Please fill out all fields.")

    new_account_id = create_account(Username = Username, Prefname = Prefname, Title = Title, Email = Email, AboutMe = AboutMe, Password = Password)
    return redirect(f'/account/{new_account_id}')

#gets account info
#FRONT END TEAM - NAME account html page "account.html"
@app.route('/account/<acct_id>')
def get_acct(acct_id):
    single_account = get_account(acct_id)
    if single_account:
        return render_template('account.html', account = single_account)
    else: 
        abort(404, "Account not found.")

@app.route('/feed')
def get_posts():
    try:
        all_posts = get_all_posts()
   
         if all_posts:
            return render_template('Feed_page.html', posts=all_posts)
        else:
            abort(404, "No posts found.")
    except Exception as e:
        abort(500, f"Internal Server Error: {str(e)}")

@app.route('/Post')
def get_post():
    single_post = get_one_post(post_id)
    if single_post:
        return render_template('single_post.html', post = single_post)
    else:
        abort(404, f"Post with ID {post_id} not found.")

@app.post('/upload')
def new_post():
    Name = request.form.get("new_name")
    Link = request.form.get("new_link")
    Description = request.form.get("new_description")
    CreatedBy = request.form.get("CreatedBy")
    Code = request.form.get("new_code")
    
    if not Name or not Link or not Description or not CreatedBy or not Code:
        abort(400, "Missing required information. Please fill out all fields.")

    new_post_id = create_post(Name = Name, Link = Link, Description = Description, CreatedBy = CreatedBy, Code = Code)
    return redirect('/feed')


@app.route('/Account/<int:post_id>/delete')
def del_acct(acct_id):
   try:
        if get_account(acct_id):
            delete_account(acct_id)
            return redirect('/login')
        else:
            abort(404, "Account not found.")
    except Exception as e:
        abort(500, f"Internal Server Error: {str(e)}")


#TODO 
#Make an @app.route to obtain all of the comments for a given post 

#TODO
#Make an @app.post to post a single comment


#Placeholder FOR REESE 
#DO NOT EDIT THIS FILE 

if __name__ == "__main__":
    app.run()